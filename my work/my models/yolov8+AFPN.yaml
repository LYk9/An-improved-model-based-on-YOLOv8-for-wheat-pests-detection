nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args] [输入，重复次数，名称，本层参数]  640*640*3
  - [-1, 1, Conv, [64, 3, 2]]  # 0-P1/2  64:输出通道数  3:kernel size  2：stride  不指定时:p=k//2 尺寸：f_out = ((f_in - k + 2*p ) / s ) 向下取整 +1  320*320*64
  - [-1, 1, Conv, [128, 3, 2]]  # 1-P2/4 160*160*128
  - [-1, 3, C2f, [128, True]]    # 2 特征图尺寸不变
  - [-1, 1, Conv, [256, 3, 2]]  # 3-P3/8 80*80*256
  - [-1, 6, C2f, [256, True]]    # 4
  - [-1, 1, Conv, [512, 3, 2]]  # 5-P4/16 40*40*512
  - [-1, 6, C2f, [512, True]]   # 6
  - [-1, 1, Conv, [1024, 3, 2]]  # 7-P5/32 20*20*1024
  - [-1, 3, C2f, [1024, True]]   # 8
  - [-1, 1, SPPF, [1024, 5]]   # 9 concat 快速空间金字塔池化层（SPPF）。1024输出通道数，5池化核大小k。concat得到的特征图尺寸是20*20*（512*4），Conv得到20*20*1024。

# YOLOv8.0n head
head:
  - [[4, 6],1, ASFF_2, [0]] # 10
  - [-1, 3, C2f, [64]]  # 11 40*40*512

  - [[4, 6],1, ASFF_2, [1]] # 12
  - [-1, 3, C2f, [128]]  # 13 40*40*512

  - [[-3,-1,9],1, ASFF_3, [0]] # 14
  - [-1, 3, C2f, [64]]  # 15 40*40*512

  - [[-5,-3,9],1, ASFF_3, [1]] # 16
  - [-1, 3, C2f, [128]]  # 17 40*40*512

  - [[-7,-5,9],1, ASFF_3, [2]] # 18
  - [-1, 3, C2f, [128]]  # 19 40*40*512

  - [[15, 17, 19], 1, Detect, [nc]]  # Detect(P3, P4, P5)
